* Net list generated by Topology Workbench, Cadence Design Systems Inc.

* Simulator: SPDSIM
* Simulator Path: C:\Cadence\Sigrity2024.0\tools\bin\SPDsimCon.exe

* Add global .option and .include commands here.
* They'll be used for time domain characterization.
* .option delmax=10p


.inc 'D:\Projects\HardwareDesign\Sigrity\secure_ic_emc\result\4\Tran_Typ_Typ\simulation_ibis_definition.sp'
.inc 'D:\Projects\HardwareDesign\Sigrity\secure_ic_emc\result\TL.sp'
.inc 'D:\Projects\HardwareDesign\Sigrity\secure_ic_emc\result\TL1.sp'
.inc 'D:\Projects\HardwareDesign\Sigrity\secure_ic_emc\result\TL2.sp'
.inc 'D:\Projects\HardwareDesign\Sigrity\secure_ic_emc\result\TL3.sp'
.inc 'D:\Projects\HardwareDesign\Sigrity\secure_ic_emc\result\C.sp'
.inc 'D:\Projects\HardwareDesign\Sigrity\secure_ic_emc\result\C1.sp'
.inc 'D:\Projects\HardwareDesign\Sigrity\secure_ic_emc\result\L.sp'

X1 n1 n2 n3 gnd
+ Tx_transmit

X2 n1 n4 n5 gnd n6 n7 n8 gnd
+ Tx_Default_OnDie_RC

X3 n6 n9 n10 gnd n11 n12 n10 gnd
+ Tx_Default_Pin_RLC
+ R_pkg = 0.1m
+ L_pkg = 0.1nH
+ C_pkg = 1.0pF

X4 n13 n14 n15 gnd
+ Rx_receive

X5 n16 n17 n18 gnd n19 n20 n21 gnd
+ Rx_Default_OnDie_RC

X6 n22 n23 n24 gnd n25 n26 n24 gnd
+ Rx_Default_Pin_RLC
+ R_pkg = 0.1m
+ L_pkg = 0.1nH
+ C_pkg = 1.0pF

X7 n27 n28 n29 n30 gnd
+ TL

X8 n11 n31 n32 n33 gnd
+ TL1

X9 n29 n30 n34 n35 gnd
+ TL2

X10 n32 n33 n36 n28 gnd
+ TL3

X11 n32 n33 gnd
+ C

X12 n29 n30 gnd
+ C1

X13 n36 n27 gnd
+ L

X14 n37 n38 n39 gnd
+ Rx1_receive

X15 n40 n38 n41 gnd n42 n43 n44 gnd
+ Rx1_Default_OnDie_RC

X16 n45 n43 n46 gnd n47 n35 n46 gnd
+ Rx1_Default_Pin_RLC
+ R_pkg = 0.1m
+ L_pkg = 0.1nH
+ C_pkg = 1.0pF

X17 n48 n49 n50 gnd
+ Tx1_transmit

X18 n51 n52 n53 gnd n54 n55 n56 gnd
+ Tx1_Default_OnDie_RC

X19 n57 n58 n59 gnd n60 n61 n59 gnd
+ Tx1_Default_Pin_RLC
+ R_pkg = 0.1m
+ L_pkg = 0.1nH
+ C_pkg = 1.0pF


R_n31_gnd n31 gnd 50		$ Auto-terminate 3 of TL1
R_n34_gnd n34 gnd 50		$ Auto-terminate 2 of TL2

.tran 20.000000p 12.000000n

.print V(n1, gnd)		$ Tx, Signal: TX_P
.print V(n38, gnd)		$ Rx1, Signal: RX_N
.print V(n11, gnd)		$ Tx, Signal: TX_P
.print V(n35, gnd)		$ Rx1, Signal: RX_N

.end
